services:
  #certbot:
  #  image: certbot/certbot
  #  container_name: certbot
  #  volumes:
  #    - certbot-etc:/etc/letsencrypt
  #    #- certbot-var:/var/lib/letsencrypt
  #  ports:
  #    - "80:80"
  #  command: certonly --standalone --cert-name=netrisk -m "test@tutu.com" -d "need_domain_name" --agree-tos
  proxy:
    build: ./nginx
    depends_on:
      - streamlit
      - ftp # for the ssl certif
    restart: always
    container_name: nginx
    environment:
      UI_USER: ${UI_USER:-admin}
      UI_PASSWD: ${UI_PASSWD:-admin}
    volumes:
      - ssl_cert:/etc/ssl/certs
    networks:
      - streamlit_net
      - adminer_net # to debug
    ports:
      #- "443:443" # when ready to expose to web
      - "127.0.0.1:443:443" # only accessible form server (via ssh and port forward)
    #stop_grace_period: 30s
  db:
    image: mariadb:11.2
    restart: always
    container_name: sc_mariadb
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root_password}
      MYSQL_DATABASE: ${DATABASE_NAME:-seiscomp}
      MYSQL_USER: ${USER_NAME:-sysop}
      MYSQL_PASSWORD: ${USER_PASSWD:-sysop}
      MYSQL_ROOT_HOST: localhost
    volumes:
      - sc_mariadb_data:/var/lib/mysql
      - ./mariadb_init:/docker-entrypoint-initdb.d # Initial seiscomp db template loaded from mariadb_init folder
    expose:
      - "3306"
    networks:
      - db_net
      - adminer_net
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 3
  adminer:
    image: adminer
    restart: always
    container_name: adminer
    environment:
      ADMINER_DEFAULT_SERVER: sc_mariadb
    expose:
      - "8080"
    #ports:
    #- "127.0.0.1:8081:8080" # for debug
    #- "80:8080" # for debug
    networks:
      - adminer_net
  ftp:
    build: ./ftp
    #depends_on:
    #  - certbot # new certif handle test
    init: true # allows to transfer stop/SIGTERM to vsftpd process
    restart: always
    container_name: vsftpd
    ports:
      #- "20:20" # not needed in PASSIVE mode
      - "21:21"
      - "7000-7050:7000-7050" # reduced number of published port by 10x to reduce container startup and stop time
      #- "7000-7500:7000-7500"
    volumes:
      - ftp_data:/data/ftp
      - ssl_cert:/etc/ssl/certs
      - ftp_userdb:/etc/vsftpd # need to share with streamlit
    #  - certbot-etc:/etc/letsencrypt
    environment:
      - COUNTRY_CODE=${COUNTRY_CODE:-XX}
      - STATE=${STATE:-State}
      - LOCALITY=${LOCALITY:-City}
      - ORGANIZATION=${ORGANIZATION:-Company}
      - SECTION=${SECTION:-Section}
      - COMMON_NAME=${COMMON_NAME:-Netrisk Server}
      - EMAIL_ADRESS=${EMAIL_ADRESS:-}
  seiscomp:
    build: ./seiscomp
    depends_on:
      db:
        condition: service_healthy
    restart: always
    container_name: seiscomp
    expose:
      - "8080"
    #ports:
    #  - "80:8080"
    networks:
      - db_net
      - streamlit_net
    volumes:
      - seiscomp_data_archive:/usr/local/app/seiscomp/var/lib/archive # to preserve data independantly of container
      - seiscomp_inventory:/usr/local/app/seiscomp/etc/inventory # to preserve inventory (seiscomp scxml files) independantly of container
      - ftp_data:/data/ftp
      - fdsnXML_data:/data/xml
      - incron_reload:/data/reload
    environment:
      - DATABASE_NAME=${DATABASE_NAME:-seiscomp}
      - USER_NAME=${USER_NAME:-sysop}
      - USER_PASSWD=${USER_PASSWD:-sysop}
      - ORGANIZATION=${ORGANIZATION:-Company}
      - SECTION=${SECTION:-Section}
      - COMMON_NAME=${COMMON_NAME:-Netrisk Server}
  streamlit:
    build: ./streamlit
    depends_on:
      - seiscomp
    restart: always
    container_name: streamlit
    #ports:
    expose:
      - "8501"
    networks:
      - streamlit_net
    volumes:
      - ftp_userdb:/data/ftp_users # need to share with vsftpd (no need for mounted volume?)
      - fdsnXML_data:/data/xml
      - ftp_data:/data/ftp # to allow creation of station folders
      - incron_reload:/data/reload
    environment:
      UI_USER: ${UI_USER:-anonymous} # to use in station xml creation (source field)
volumes:
  sc_mariadb_data:
  ftp_data:
  ftp_userdb:
  fdsnXML_data:
  incron_reload:
  seiscomp_data_archive:
  seiscomp_inventory:
  ssl_cert:
  #certbot-etc:
networks:
  db_net:
  adminer_net:
  streamlit_net:
